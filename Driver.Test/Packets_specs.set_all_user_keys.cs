using AwesomeAssertions;

namespace Driver.Test;

public partial class Packets_specs
{
    [Test]
    public void SetAllUserKeys_packet_correctly_formed1()
    {
        cs2Profile.CreateSetAllUserKeys(0)
            .Should()
            .BeEquivalentTo(new Command()
            {
                Packets =
                [
                    [85, 9, 0, 38, 56, 0, 0, 0, 16, 0, 20, 16, 0, 8, 16, 0, 28, 16, 0, 45, 16, 0, 40, 16, 0, 63, 16, 0, 6, 147, 1, 17, 16, 0, 80, 16, 0, 76, 16, 0, 4, 16, 0, 7, 16, 0, 10, 16, 0, 18, 16, 0, 75, 16, 0, 62, 145, 0, 0, 147, 0, 7, 16, 0],
                    [85, 9, 0, 143, 56, 56, 0, 0, 82, 16, 0, 74, 16, 0, 29, 16, 0, 21, 16, 0, 11, 16, 0, 19, 16, 0, 78, 16, 0, 61, 16, 0, 5, 16, 0, 14, 16, 32, 0, 16, 0, 81, 16, 0, 30, 16, 0, 33, 16, 0, 36, 16, 0, 39, 16, 0, 49, 16, 0, 64, 16, 0, 25, 240],
                    [85, 9, 0, 215, 56, 112, 0, 0, 255, 1, 16, 16, 0, 16, 0, 79, 16, 0, 53, 16, 0, 32, 16, 0, 23, 16, 0, 12, 16, 0, 42, 16, 0, 65, 16, 1, 0, 16, 0, 13, 144, 1, 0, 16, 0, 69, 16, 0, 41, 16, 0, 31, 16, 0, 34, 16, 0, 37, 16, 0, 46, 16, 0, 60],
                    [85, 9, 0, 75, 56, 168, 0, 0, 16, 4, 0, 16, 0, 16, 16, 0, 56, 16, 0, 68, 16, 0, 57, 16, 0, 22, 16, 0, 9, 16, 0, 24, 148, 3, 74, 16, 0, 58, 16, 2, 0, 16, 0, 17, 144, 0, 0, 16, 0, 66, 16, 0, 43, 112, 0, 1, 16, 0, 35, 16, 0, 38, 148, 2],
                    [85, 9, 0, 228, 56, 224, 0, 0, 64, 16, 0, 59, 16, 8, 0, 16, 0, 44, 146, 4, 44, 16, 0, 67, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 25, 56, 24, 1, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 81, 48, 80, 1, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0]
                ]
            });

    }

    [Test]
    public void SetAllUserKeys_packet_correctly_formed2()
    {
        cs2Profile.CreateSetAllUserKeys(1)
            .Should()
            .BeEquivalentTo(new Command()
            {
                Packets =
                [
                    [85, 9, 0, 63, 56, 0, 2, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 240, 160, 0, 16, 0, 0, 16, 0, 0, 16, 0, 73, 240, 50, 0, 240, 47, 0, 240, 54, 0, 240, 4, 0, 16, 0, 0, 16, 0, 0, 240, 17, 0, 16, 0, 0, 16, 0],
                    [85, 9, 0, 98, 56, 56, 2, 0, 0, 16, 0, 77, 240, 16, 0, 16, 0, 0, 16, 0, 0, 240, 5, 0, 16, 0, 0, 16, 0, 0, 240, 19, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 182, 0, 240, 21, 0, 240],
                    [85, 9, 0, 135, 56, 112, 2, 0, 255, 2, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 240, 254, 0, 48, 205, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 233, 0, 240, 8, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0],
                    [85, 9, 0, 178, 56, 168, 2, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 234, 0, 16, 0, 0, 240, 51, 0, 240, 62, 0, 16, 0, 0, 16, 0, 0, 48, 112, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 181, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0],
                    [85, 9, 0, 181, 56, 224, 2, 0, 0, 48, 111, 0, 240, 2, 0, 16, 0, 0, 16, 0, 0, 48, 226, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 27, 56, 24, 3, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 83, 48, 80, 3, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0]
                ]
            });

    }

    [Test]
    public void SetAllUserKeys_packet_correctly_formed3()
    {
        cs2Profile.CreateSetAllUserKeys(2)
            .Should()
            .BeEquivalentTo(new Command()
            {
                Packets =
                [
                    [85, 9, 0, 18, 56, 0, 4, 0, 16, 0, 20, 16, 0, 8, 16, 0, 28, 16, 0, 45, 16, 0, 40, 16, 0, 63, 16, 0, 6, 16, 0, 55, 16, 0, 80, 16, 0, 76, 16, 0, 4, 16, 0, 7, 16, 0, 10, 16, 0, 18, 16, 0, 75, 16, 0, 62, 16, 0, 27, 16, 0, 54, 16, 0],
                    [85, 9, 0, 147, 56, 56, 4, 0, 82, 16, 0, 74, 16, 0, 29, 16, 0, 21, 16, 0, 11, 16, 0, 19, 16, 0, 78, 16, 0, 61, 16, 0, 5, 16, 0, 14, 16, 32, 0, 16, 0, 81, 16, 0, 30, 16, 0, 33, 16, 0, 36, 16, 0, 39, 16, 0, 49, 16, 0, 64, 16, 0, 25, 240],
                    [85, 9, 0, 107, 56, 112, 4, 0, 255, 3, 16, 16, 0, 16, 0, 79, 16, 0, 53, 16, 0, 32, 16, 0, 23, 16, 0, 12, 16, 0, 42, 16, 0, 65, 16, 1, 0, 16, 0, 13, 16, 0, 15, 16, 0, 69, 16, 0, 41, 16, 0, 31, 16, 0, 34, 16, 0, 37, 16, 0, 46, 16, 0, 60],
                    [85, 9, 0, 152, 56, 168, 4, 0, 16, 8, 0, 16, 0, 16, 16, 0, 56, 16, 0, 68, 16, 0, 57, 16, 0, 22, 16, 0, 9, 16, 0, 24, 16, 0, 48, 16, 0, 58, 16, 2, 0, 16, 0, 17, 16, 0, 51, 16, 0, 66, 16, 0, 43, 16, 0, 26, 16, 0, 35, 16, 0, 38, 16, 0],
                    [85, 9, 0, 85, 56, 224, 4, 0, 47, 16, 0, 59, 16, 4, 0, 16, 0, 44, 16, 0, 52, 16, 0, 67, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 29, 56, 24, 5, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 85, 48, 80, 5, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0]
                ]
            });

    }

    [Test]
    public void SetAllUserKeys_packet_correctly_formed4()
    {
        cs2Profile.CreateSetAllUserKeys(3)
            .Should()
            .BeEquivalentTo(new Command()
            {
                Packets =
                [
                    [85, 9, 0, 67, 56, 0, 6, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 240, 160, 0, 16, 0, 0, 16, 0, 0, 16, 0, 73, 240, 50, 0, 240, 47, 0, 240, 54, 0, 240, 4, 0, 16, 0, 0, 16, 0, 0, 240, 17, 0, 16, 0, 0, 16, 0],
                    [85, 9, 0, 102, 56, 56, 6, 0, 0, 16, 0, 77, 240, 16, 0, 16, 0, 0, 16, 0, 0, 240, 5, 0, 16, 0, 0, 16, 0, 0, 240, 19, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 182, 0, 240, 21, 0, 240],
                    [85, 9, 0, 141, 56, 112, 6, 0, 255, 4, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 240, 254, 0, 48, 205, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 233, 0, 240, 8, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0],
                    [85, 9, 0, 182, 56, 168, 6, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 234, 0, 16, 0, 0, 240, 51, 0, 240, 62, 0, 16, 0, 0, 16, 0, 0, 48, 112, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 181, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 16, 0],
                    [85, 9, 0, 215, 56, 224, 6, 0, 0, 48, 111, 0, 16, 0, 0, 16, 0, 0, 16, 0, 0, 48, 226, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 31, 56, 24, 7, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],
                    [85, 9, 0, 87, 48, 80, 7, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0]
                ]
            });

    }
}
